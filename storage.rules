
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
  
    // UTILITY: Check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // --- Listings Images ---
    // Path: /listings/{userId}/{fileName}
    // Anyone can read listing images to view the site.
    // Only an authenticated user can write (upload) images to their own user-specific folder.
    // File size must be under 5MB.
    // Only images are allowed.
    match /listings/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if isAuthenticated()
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024
                   && request.resource.contentType.matches('image/.*');
    }

    // --- Lease Contracts ---
    // Path: /leaseContracts/{bookingId}/{fileName}
    // Only the renter or landowner associated with the booking can read or write the lease.
    // This requires that the booking document exists and the user is a participant.
    match /leaseContracts/{bookingId}/{allPaths=**} {
        function isBookingParticipant() {
            let booking = get(/databases/$(database)/documents/bookings/$(bookingId)).data;
            return request.auth.uid == booking.renterId || request.auth.uid == booking.landownerId;
        }
        allow read, write: if isAuthenticated() && isBookingParticipant();
    }
  }
}
