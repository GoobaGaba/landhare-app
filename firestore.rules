
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default Deny: Secure by default
    match /{document=**} {
      allow read, write: if false;
    }

    // Users:
    // - Anyone can read a user's public profile.
    // - Only the authenticated user can create or update their own profile.
    match /users/{userId} {
      allow read: if true;
      allow create, update: if request.auth != null && request.auth.uid == userId;
    }
    
    // Listings:
    // - Anyone can read available listings.
    // - Authenticated users can create listings.
    // - Only the landowner can update or delete their own listing.
    match /listings/{listingId} {
      allow read: if resource.data.isAvailable == true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.landownerId;
    }

    // Bookings:
    // - Only the renter or the landowner can read a booking.
    // - Only the authenticated renter can create a booking.
    // - The renter or landowner can update the booking (e.g., status changes).
    match /bookings/{bookingId} {
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.renterId || request.auth.uid == resource.data.landownerId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.renterId;
    }

    // Reviews:
    // - Anyone can read reviews for a listing.
    // - Only authenticated users can create a review.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
    }
    
    // Transactions:
    // - Only the user associated with the transaction can read it.
    match /transactions/{transactionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null; // Server-side logic should validate creation
    }

    // Admin State (Checklists, Metrics)
    // - Only authenticated admins can read or write this data.
    match /admin_state/{docId} {
       allow read, write: if request.auth != null && request.auth.token.email in ['Gabrielleunda@gmail.com'];
    }

    // Backtest Presets
    // - Only authenticated admins can manage these.
     match /backtest_presets/{presetId} {
       allow read, write, delete: if request.auth != null && request.auth.token.email in ['Gabrielleunda@gmail.com'];
    }
  }
}
