rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return request.auth != null && request.auth.uid in ['AdminGNL6965'];
    }

    // Listings can be read by anyone, but only created, updated, or deleted
    // by the landowner who owns it.
    match /listings/{listingId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.landownerId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.landownerId == request.auth.uid;
    }
    
    // Users can read public profiles, but can only write to their own.
    // Admins have full read/write access to user profiles.
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if (request.auth != null && request.auth.uid == userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Bookings can only be read by the renter or the landowner involved.
    // They can only be created by an authenticated user. Updates are handled by server logic.
    match /bookings/{bookingId} {
      allow read: if request.auth != null && (request.auth.uid == resource.data.renterId || request.auth.uid == resource.data.landownerId);
      allow create: if request.auth != null;
      allow update: if request.auth != null; // Status updates handled by secure server-side logic
    }
    
    // Reviews can be read by anyone, but only created/modified by the user who wrote them.
    match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Transactions can only be read by the user they belong to.
    // They cannot be created or updated from the client.
    match /transactions/{transactionId} {
        allow read: if request.auth != null && request.auth.uid == resource.data.userId;
        allow create, update, delete: if false; // Only server can create transactions
    }
    
    // Admin State Collection: Only Admins can read or write.
    // This protects backtest presets, checklist state, and platform metrics.
    match /admin_state/{docId} {
      allow read, write: if isAdmin();
    }
  }
}
