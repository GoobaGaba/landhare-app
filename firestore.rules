
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Listings can be read by anyone, but only created/updated/deleted by the landowner.
    match /listings/{listingId} {
      allow read: if true;
      allow create: if isAuthenticated() && request.resource.data.landownerId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.landownerId == request.auth.uid;
    }

    // User profiles can only be read and written by the user themselves. Admins have broader access if needed.
    match /users/{userId} {
      allow read, update: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && request.auth.uid == userId;
    }

    // Bookings can be read by either the renter or the landowner.
    // Only the renter can create a booking.
    // Only the renter or landowner can update a booking (e.g., change status).
    match /bookings/{bookingId} {
      allow read, update: if isAuthenticated() && (resource.data.renterId == request.auth.uid || resource.data.landownerId == request.auth.uid);
      allow create: if isAuthenticated() && request.resource.data.renterId == request.auth.uid;
    }

    // Reviews can be read by anyone.
    // Only authenticated users can create reviews.
    // Users can only update/delete their own reviews.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // Transactions are private and can only be read by the user they belong to.
    // Transactions are created by server-side logic (e.g., Cloud Functions or backend), so client create is disallowed.
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create, update, delete: if false; // Prevent client-side modification
    }
    
    // Admin-only collections for platform state and presets
    match /admin_state/{docId} {
      // Allow read/write only if the user has an `isAdmin` flag in their user profile document
      allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    match /backtest_presets/{docId} {
       allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
