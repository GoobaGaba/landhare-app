rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // Listings (public read, only owner update/delete)
    match /listings/{listingId} {
      allow read: if true;
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == resource.data.landownerId;
    }

    // Bookings (create if authenticated; read/write only by involved parties)
    match /bookings/{bookingId} {
      allow create: if request.auth.uid != null;
      allow read: if request.auth.uid == resource.data.renterId || request.auth.uid == resource.data.landownerId;
      allow update: if request.auth.uid == resource.data.renterId || request.auth.uid == resource.data.landownerId;
    }

    // Transactions (only visible to owner)
    match /transactions/{txnId} {
      allow read, write: if request.auth.uid == resource.data.userId;
    }

    match /admin_state/{docId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /backtest_presets/{presetId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /conversations/{conversationId} {
      allow read, update: if request.auth.uid in resource.data.participantIds;
      allow create: if request.auth.uid != null;
    }
    
    match /conversations/{conversationId}/messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[0] == request.auth.uid || get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds[1] == request.auth.uid;
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
