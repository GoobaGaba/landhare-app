rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of a resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Anyone can create their own user profile (on signup)
      allow create: if isOwner(userId);
      // Anyone can read any user's public profile data
      allow read: if true;
      // Only the owner can update their own profile
      allow update: if isOwner(userId);
      // Users cannot delete their profiles through the app
      allow delete: if false;
    }

    // Listings collection
    match /listings/{listingId} {
      // Anyone can read listings
      allow read: if true;
      // Only authenticated users can create listings
      allow create: if isAuthenticated();
      // Only the owner of the listing can update or delete it
      allow update, delete: if isAuthenticated() && isOwner(resource.data.landownerId);
    }
    
    // Bookings collection
    match /bookings/{bookingId} {
      // Only authenticated users can create bookings
      allow create: if isAuthenticated();
      // Only the renter or the landowner can read a specific booking
      allow read: if isAuthenticated() && (isOwner(resource.data.renterId) || isOwner(resource.data.landownerId));
      // Only the renter or the landowner can update a booking's status
      allow update: if isAuthenticated() && (isOwner(resource.data.renterId) || isOwner(resource.data.landownerId));
      // No one can delete bookings directly to maintain history
      allow delete: if false;
    }

    // Reviews collection
    match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if true;
        // Only authenticated users can write reviews
        allow create: if isAuthenticated();
        // A user can only update or delete their own review
        allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Transactions collection (highly restricted)
    match /transactions/{transactionId} {
        // Users can only read their own transactions
        allow read: if isAuthenticated() && isOwner(resource.data.userId);
        // No client-side creation, updates, or deletes. Must be done via backend logic (Cloud Functions or Server Actions).
        allow create, update, delete: if false;
    }

    // Admin State collection (highly restricted)
    match /admin_state/{docId} {
        // Only authenticated users who are admins can read/write to admin_state documents
        allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        // No client-side creation or deletion
        allow create, delete: if false;
    }

    // Backtest Presets collection (admin only)
    match /backtest_presets/{presetId} {
        // Only admins can manage backtest presets
        allow read, write, create, delete: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
